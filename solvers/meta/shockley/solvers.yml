- solver: ThermoElectric2D
  lib: shockley
  category: meta
  help: >
    Solver performing thermo-electric calculations without the optical part
    in Cartesian 2D geometry.

    This solver performs under-threshold thermo-electrical computations.
    It computes electric current flow and temperaure distribution in
    a self-consistent loop until desired convergence is reached.

  tags:
  - tag: geometry
    label: Geometry
    help: >
      Geometry settings for all solvers.
    attrs:
    - &geometry-2d-thermal
      attr: thermal
      label: Thermal
      required: true
      type: Cartesian2D geometry
      help: >
        Geometry used by the thermal solver.
    - attr: electrical
      label: Electrical
      required: true
      type: Cartesian2D geometry
      help: >
        Geometry used by the electrical solver.

  - &mesh
    tag: mesh
    label: Mesh
    help: >
      Mesh settings for all solvers.
    attrs:
    - &mesh-2d-thermal
      attr: thermal
      label: Thermal
      required: true
      type: mesh
      mesh types: [ Rectangular2D ]
      help: >
        Mesh used by the thermal solver.
    - &mesh-2d-electrical
      attr: electrical
      label: Electrical
      required: true
      type: mesh
      mesh types: [ Rectangular2D ]
      help: >
        Mesh used by the electrical solver.
    - &full-mesh-electrical
      attr: include-empty
      label: Include Empty Regions
      type: bool
      default: no
      help: >
        Should empty regions (e.g. air) be included into electrical computations?

  - &voltage
    bcond: voltage
    label: Voltage
    mesh type: Rectangular2D
    mesh: { tag: mesh, attr: electrical }
    geometry: { tag: geometry, attr: electrical }

  - &temperature
    bcond: temperature
    label: Temperature
    mesh type: Rectangular2D
    mesh: { tag: mesh, attr: thermal }
    geometry: { tag: geometry, attr: thermal }

  - &heatflux
    bcond: heatflux
    label: Heat Flux
    mesh type: Rectangular2D
    mesh: { tag: mesh, attr: thermal }
    geometry: { tag: geometry, attr: thermal }

  - &convection
    bcond: convection
    label: Convective
    values: [ coeff, ambient ]
    mesh type: Rectangular2D
    mesh: { tag: mesh, attr: thermal }
    geometry: { tag: geometry, attr: thermal }
    help: >
      This boundary condition does not have <i>value</i> attribute. Use <i>coeff</i> for convection
      coefficient and <i>ambient</i> for ambient temperature instead.

  - &radiation
    bcond: radiation
    label: Radiative
    values: [ emissivity, ambient ]
    mesh type: Rectangular2D
    mesh: { tag: mesh, attr: thermal }
    geometry: { tag: geometry, attr: thermal }
    help: >
      This boundary condition does not have <i>value</i> attribute. Use <i>emissivity</i> for surface
      emissivity and <i>ambient</i> for ambient temperature instead.

  - &junction
    tag: junction
    label: Configuration of the Effective Model of p-n Junction
    help: >
      Configuration of the effective model of p-n junction.
    attrs:
    - attr: beta#
      label: Junction coefficients<br/>(one per line)
      type: float
      unit: 1/V
      help: >
        Junction coefficients. This is an inverse of the junction thermal voltage.
    - attr: js#
      label: Reverse bias current densities<br/>(one per line)
      type: float
      unit: A/m<sup>2</sup>
      help: >
        Reverse bias current densities.
    - attr: pnjcond
      label: Initial junctions conductivity
      type: float
      unit: S/m
      default: 5.0
      help: >
        Initial vertical conductivity of the junctions.

  - &contacts
    tag: contacts
    label: Properties of the Contacts
    help: >
      Properties of the contact layers.
    attrs:
    - attr: pcond
      label: p-contact conductivity
      type: float
      unit: S/m
      default: 5.0
      help: >
        p-contact conductivity.
    - attr: ncond
      label: n-contact conductivity
      type: float
      unit: S/m
      default: 50.0
      help: >
        n-contact conductivity.

  - &loop
    tag: loop
    label: Loop Configuration
    help: >
      Configuration of the self-consistent loop.
    attrs:
    - &tfreq
      attr: tfreq
      label: Thermal update frequency
      type: int
      default: 6
      help: >
        Number of electrical iterations per single thermal step. As temperature tends to converge faster,
        it is reasonable to repeat thermal solution less frequently.
    - &inittemp
      attr: inittemp
      label: Initial temperature
      type: float
      unit: K
      default: 300
      help: >
        Initial temperature used for the first computation.
    - &maxterr
      attr: maxterr
      label: Maximum temperature error
      type: float
      unit: K
      default: 0.05
      help: >
        Maximum allowed temperature error.
    - &maxcerr
      attr: maxcerr
      label: Maximum current density error
      type: float
      unit: '%'
      default: 0.05
      help: >
        Maximum allowed current density error.

  - &tmatrix
    !include
      $file: fem.yml
      $update:
        - $path: [tag]
          $value: tmatrix
        - $path: [label]
          $value: Thermal Matrix Solver
        - $path: [help]
          $value: Matrix configuration for the thermal solver.
        - $path: [tags, 0, label]
          $value: Iterative Params (Thermal)

  - &ematrix
    !include
      $file: fem.yml
      $update:
        - $path: [tag]
          $value: ematrix
        - $path: [label]
          $value: Electrical Matrix Solver
        - $path: [help]
          $value: Matrix configuration for the electrical solver.
        - $path: [tags, 0, label]
          $value: Iterative Params (Electrical)


  providers: &thermoelectric-providers
  - outTemperature
  - outHeatFlux
  - outThermalConductivity
  - outVoltage
  - outCurrentDensity
  - outHeat
  - outConductivity

###########################################################################################

- solver: ThermoElectricCyl
  lib: shockley
  category: meta
  help: >
    Solver performing thermo-electric calculations without the optical part
    in cylindrical 2D geometry.

    This solver performs under-threshold thermo-electrical computations.
    It computes electric current flow and temperaure distribution in
    a self-consistent loop until desired convergence is reached.

  tags:
  - tag: geometry
    label: Geometry
    help: >
      Geometry settings for all solvers.
    attrs:
    - &geometry-cyl-thermal
      attr: thermal
      label: Thermal
      required: true
      type: cylindrical geometry
      help: >
        Geometry used by the thermal solver.
    - attr: electrical
      label: Electrical
      required: true
      type: cylindrical geometry
      help: >
        Geometry used by the electrical solver.

  - *mesh

  - *voltage

  - *temperature

  - *heatflux

  - *convection

  - *radiation

  - *junction

  - *contacts

  - *loop

  - *tmatrix

  - *ematrix

  providers: *thermoelectric-providers

###########################################################################################

- solver: ThermoElectric3D
  lib: shockley
  category: meta
  help: >
    Solver performing thermo-electric calculations without the optical part
    in 3D geometry.

    This solver performs under-threshold thermo-electrical computations.
    It computes electric current flow and temperaure distribution in
    a self-consistent loop until desired convergence is reached.

  tags:
  - tag: geometry
    label: Geometry
    help: >
      Geometry settings for all solvers.
    attrs:
    - attr: thermal
      label: Thermal
      required: true
      type: Cartesian3D geometry
      help: >
        Geometry used by the thermal solver.
    - attr: electrical
      label: Electrical
      required: true
      type: Cartesian3D geometry
      help: >
        Geometry used by the electrical solver.

  - tag: mesh
    label: Mesh
    help: >
      Mesh settings for all solvers.
    attrs:
    - attr: thermal
      label: Thermal
      required: true
      type: mesh
      mesh types: [ Rectangular3D ]
      help: >
        Mesh used by the thermal solver.
    - attr: electrical
      label: Electrical
      required: true
      type: mesh
      mesh types: [ Rectangular3D ]
      help: >
        Mesh used by the electrical solver.
    - *full-mesh-electrical

  - bcond: voltage
    label: Voltage
    mesh type: Rectangular3D
    mesh: { tag: mesh, attr: electrical }
    geometry: { tag: geometry, attr: electrical }

  - bcond: temperature
    label: Temperature
    mesh type: Rectangular3D
    mesh: { tag: mesh, attr: thermal }
    geometry: { tag: geometry, attr: thermal }

  - bcond: heatflux
    label: Heat Flux
    mesh type: Rectangular3D
    mesh: { tag: mesh, attr: thermal }
    geometry: { tag: geometry, attr: thermal }

  - bcond: convection
    label: Convective
    values: [ coeff, ambient ]
    mesh type: Rectangular3D
    mesh: { tag: mesh, attr: thermal }
    geometry: { tag: geometry, attr: thermal }
    help: >
      This boundary condition does not have <i>value</i> attribute. Use <i>coeff</i> for convection
      coefficient and <i>ambient</i> for ambient temperature instead.

  - bcond: radiation
    label: Radiative
    values: [ emissivity, ambient ]
    mesh type: Rectangular3D
    mesh: { tag: mesh, attr: thermal }
    geometry: { tag: geometry, attr: thermal }
    help: >
      This boundary condition does not have <i>value</i> attribute. Use <i>emissivity</i> for surface
      emissivity and <i>ambient</i> for ambient temperature instead.

  - *junction

  - *contacts

  - *loop


  - !include
      $file: fem.yml
      $update:
        - $path: [tag]
          $value: tmatrix
        - $path: [label]
          $value: Thermal Matrix Solver
        - $path: [help]
          $value: Matrix configuration for the thermal solver.
        - $path: [tags, 0, label]
          $value: Iterative Params (Thermal)
        - $path: [attrs, 0, default]
          $value: iterative

  - !include
      $file: fem.yml
      $update:
        - $path: [tag]
          $value: ematrix
        - $path: [label]
          $value: Electrical Matrix Solver
        - $path: [help]
          $value: Matrix configuration for the electrical solver.
        - $path: [tags, 0, label]
          $value: Iterative Params (Electrical)
        - $path: [attrs, 0, default]
          $value: iterative

  providers: *thermoelectric-providers

###########################################################################################

- solver: ThresholdSearchCyl
  lib: shockley
  category: meta
  help: >
    Solver for threshold search of semiconductor laser in cylindrical geometry.

    This solver performs thermo-electrical computations followed by
    determination ot threshold current and optical analysis in order to
    determine the threshold of a semiconductor laser. The search is
    performed by ``scipy`` root finding algorithm in order to determine
    the voltage and electric current ensuring no optical loss in the
    laser cavity.

  tags:
  - &threshold-cylindrical-geometry
    tag: geometry
    label: Geometry
    help: >
      Geometry settings for all solvers.
    attrs:
    - *geometry-cyl-thermal
    - &geometry-cyl-electrical
      attr: electrical
      label: Electrical
      required: true
      type: cylindrical geometry
      help: >
        Geometry used by the electrical, diffusion, and gain solvers.
    - &geometry-cyl-optical
      attr: optical
      label: Optical
      required: true
      type: cylindrical geometry
      help: >
        Geometry used by the optical solver.

  - tag: mesh
    label: Mesh
    help: >
      Mesh settings for all solvers.
    attrs:
    - *mesh-2d-thermal
    - *mesh-2d-electrical
    - &mesh-2d-diffusion
      attr: diffusion
      label: Diffusion
      type: mesh
      mesh types: [ Regular ]
      help: >
        Mesh used by the carriers diffusion solver.
    - attr: optical
      label: Optical
      type: mesh
      mesh types: [ Ordered, Rectangular2D ]
      help: >
        Mesh used by the optical solver.
    - *full-mesh-electrical

  - tag: optical
    label: Optical Solver Configuration
    help: >
      Configuration of the optical solver
    attrs:
    - group: LP<i>mn</i> mode identification
      attrs:
      - attr: m
        label: <i>m</i> (angular)
        type: int
        default: 0
        help: >
          Angular mode number <i>m</i> (0 for LP0x, 1 for LP1x, etc.).
      - attr: 'n'
        label: <i>n</i> (radial)
        type: int
        default: 1
        help: >
          Radial mode number <i>n</i> (1 for LPx1, 2 for LPx2, etc.).
    - attr: lam0
      label: Approximate wavelength
      required: true
      type: float
      unit: nm
      help: >
        Approximate wavelength, around which the solution is searched. The refractive and group indexes
        are computed for this wavelength
    - &maxlam
      attr: maxlam
      var: maxlam
      label: Maximum wavelength
      type: float
      unit: nm
      help: >
        Maximum wavelength considered for the optical mode search.
    - &dlam
      attr: dlam
      var: dlam
      label: Wavelength step
      type: float
      unit: nm
      default: 0.02
      help: >
        Step, by which the wavelength is swept while searching for the approximate mode.
    - attr: vlam
      label: Vertical wavelength
      type: float
      unit: nm
      help: >
        "Vertical wavelength" i.e. the wavelength what would be in the absence of lateral confinement;
        setting this value helps to find modes in very long resonators.
    - attr: vat
      label: Vertical solution coord
      type: float
      unit: µm
      help: >
        Horizontal position of at which the vertical part of the field is calculated.

  - &threshold-root
    tag: root
    label: Threshold Root-Finder Parameters
    help: >
      Configuration of the root-finder used in threshold search.
    attrs:
    - attr: bcond
      label: Voltage boundary to vary
      required: true
      type: int
      help: >
        Number of the voltage boundary condition to vary during the threshold search.
    #- attr: quick
    #  label: Use quick method
    #  type: bool
    #  default: false
    #  help: >
    #    If this flag is set, the optical root finding is performed together with the threshold
    #    voltage search. It may increase performance in case of the long optical computations.
    - group: Voltage range
      unit: V
      attrs:
      - attr: vmin
        label: min.
        type: float
        help: >
          Minimum voltage to search threshold for. It should be below the threshold.
      - attr: vmax
        label: max.
        type: float
        help: >
          Maximum voltage to search threshold for. It should be above the threshold.
    - attr: vtol
      label: Maximum voltage error
      type: float
      unit: V
      default: 1.0e-05
      help: >
        Tolerance on voltage in the root search.
    - attr: maxiter
      label: Max. iterations
      type: int
      default: 50
      help: >
        Maximum number of root finding iterations.

  - *voltage

  - *temperature

  - *heatflux

  - *convection

  - *radiation

  - *junction

  - *contacts

  - &threshold-thermoelectric-loop
    tag: loop
    label: Thermo-Electric Loop Configuration
    help: >
      Configuration of the self-consistent thermo-electric loop.
    attrs:
    - attr: skip-thermal
      label: Skip thermal computations
      type: bool
      default: false
      var: skip_thermal
      help: >
        Skip thermal computations. The structure is assumed to have a constant temperature <i>inittemp</i>.
        This can be used to look for the threshold under pulse laser operation.
    - *tfreq
    - *inittemp
    - *maxterr
    - *maxcerr

  - *tmatrix

  - *ematrix

  - &diffusion
    tag: diffusion
    label: Diffusion Configuration
    help: >
      Diffusion solver configuration.
    attrs:
    - attr: fem-method
      label: FEM order
      type: choice
      default: parabolic
      choices:
      - linear
      - parabolic
      help: >
        Order of the finite-element method.
    - attr: accuracy
      label: Relative accuracy
      type: float
      unit: '%'
      default: 0.01
      help: >
        Required relative accuracy.
    - attr: abs-accuracy
      label: Absolute accuracy
      type: float
      unit: cm<sup>-3</sup>
      default: 5000000000000000.0
      help: >
        Required absolute minimal concentration accuracy.
    - attr: maxiters
      label: Iterations to refine
      type: int
      default: 20
      help: >
        Maximum number of allowed iterations before attempting to refine mesh.
    - attr: maxrefines
      label: Allowed refinements
      type: int
      default: 5
      help: >
        Maximum number of allowed mesh refinements.
    - attr: interpolation
      label: Interpolation method
      type: choice
      default: spline
      choices:
      - linear
      - spline
      help: >
        Current density interpolation method name.

  - &gain
    tag: gain
    label: Gain Parameters
    help: >
      Gain solver parameters.
    attrs:
    - attr: lifetime
      label: Carriers lifetime
      type: float
      unit: ps
      default: 0.1
      help: >
        Average carriers lifetime. This parameter is used for gain spectrum broadening.
    - attr: matrix-elem
      label: Momentum matrix element
      type: float
      unit: eV×m<sub>0</sub>
      help: >
        Value of the squared matrix element in gain computations. If it is not set it is estimated automatically.
    - attr: strained
      label: Strained
      type: bool
      default: false
      help: >
        Boolean attribute indicating if the solver should consider strain in the active region. If set
        to <i>yes</i> then there must a layer with the role "<i>substrate</i>" in the geometry. The strain
        is computed by comparing the atomic lattice constants of the substrate and the quantum wells.

  - tag: optical-root
    label: Parameters of the Optical Mode Finding
    help: >
      Parameters of the horizontal root-finding algorithm in optical solver.
    attrs:
    - &method
      attr: method
      label: Root finding method
      type: choice
      default: muller
      choices: [ muller, broyden, brent ]
      help: >
        Root finding algorithm.
    - attr: determinant
      label: Determinant method
      type: choice
      choices: [ full, transfer ]
      default: transfer
      help: >
        This parameter determines the method used to compute radial determinant.
        If it is set to 'transfer', 2x2 transfer matrix is used to ensure field
        continuity at the interfaces. For the 'full' value, one single matrix is
        constructed for all the interfaces and its determinant is returned.
    - &tolx
      attr: tolx
      label: Tolerance on effective frequency
      type: float
      default: 1.0e-06
      help: >
        Maximum change of the effective frequency parameter which is allowed for convergent solution.
    - &tolf-min
      attr: tolf-min
      label: Sufficient determinant value
      type: float
      default: 1.0e-07
      help: >
        Minimum value of the determinant sufficient to assume convergence.
    - attr: tolf-max
      label: Required determinant value
      type: float
      default: 2.0e-05
      help: >
        Maximum value of the determinant required to assume convergence.
    - &maxstep
      attr: maxstep
      label: Maximum Broyden iteration step
      type: float
      default: 0.1
      help: >
        Maximum step in one iteration of root finding. Significant for the Broyden's method only.
    - &maxiter
      attr: maxiter
      label: Maximum number of iterations
      type: int
      default: 500
      help: >
        Maximum number of root finding iterations.
    - &alpha
      attr: alpha
      label: Broyden decrease factor
      type: float
      default: 1.0e-07
      help: >
        Parameter ensuring sufficient decrease of determinant in each step (Broyden method only).
    - &lambda
      attr: lambda
      label: Minimum Broyden step decrease ratio
      type: float
      default: 1.0e-08
      help: >
        Minimum decrease ratio of one step (Broyden method only).
    - &initial-range
      attr: initial-range
      label: Initial Muller range size
      type: complex
      default: 0.001
      help: >
        Initial range size (Muller method only).

  - &optical-stripe-root
    tag: optical-stripe-root
    label: Parameters of the Optical Vertical Solution Finding
    help: >
      Parameters of root-finding algorithm for one stripe in optical solver.
    attrs:
    - *method
    - *tolx
    - *tolf-min
    - &stripe-tolf-max
      attr: tolf-max
      label: Required determinant value
      type: float
      default: 1.0e-05
      help: >
        Maximum value of the determinant required to assume convergence.
    - *maxstep
    - *maxiter
    - *alpha
    - *lambda
    - *initial-range

  - &threshold-output
    tag: output
    label: Output Settings
    help: >
      Settings for the solver output.
    attrs:
      - group: Optical field resolution
        attrs:
        - attr: optical-res-x
          label: horizontal
          type: int
          default: 800
          help: >
            Number of points along the horizontal axis for the saved and plotted optical field.
        - attr: optical-res-y
          label: vertical
          type: int
          default: 600
          help: >
            Number of points along the vertical axis for the saved and plotted optical field.

  providers: &threshold-providers
  - outTemperature
  - outHeatFlux
  - outThermalConductivity
  - outVoltage
  - outCurrentDensity
  - outCurrentDensity
  - outHeat
  - outConductivity
  - outLightMagnitude
  - outLightE
  - outRefractiveIndex

###########################################################################################

- solver: ThresholdSearchBesselCyl
  lib: shockley
  category: meta
  help: >
    Solver for threshold search of semiconductor laser in cylindrical geometry.

    This solver performs thermo-electrical computations followed by
    determination ot threshold current and optical analysis in order to
    determine the threshold of a semiconductor laser. The search is
    performed by ``scipy`` root finding algorithm in order to determine
    the voltage and electric current ensuring no optical loss in the
    laser cavity.

    The optical computations are done with vector method based on Bessel exansion.

  tags:
  - *threshold-cylindrical-geometry

  - tag: mesh
    label: Mesh
    help: >
      Mesh settings for all solvers.
    attrs:
    - *mesh-2d-thermal
    - *mesh-2d-electrical
    - *mesh-2d-diffusion
    - attr: optical
      label: Optical
      type: mesh
      mesh types: [ Ordered ]
      help: >
        Mesh used by the optical solver.
    - *full-mesh-electrical

  - tag: optical
    label: Optical Solver Configuration
    help: >
      Configuration of the optical solver
    attrs:
    - group: HE<i>mn</i> mode identification
      attrs:
      - attr: m
        var: hem
        label: <i>m</i> (angular)
        type: int
        default: 1
        help: >
          Angular mode number <i>m</i> (0 for LP0x, 1 for LP1x, etc.).
      - attr: 'n'
        var: hen
        label: <i>n</i> (radial)
        type: int
        default: 1
        help: >
          Radial mode number <i>n</i> (1 for LPx1, 2 for LPx2, etc.).
    - &lam0
      attr: lam0
      var: optical.lam0
      label: Wavelength for parameters
      type: float
      help: >
        This is a wavelength at which refractive index is retrieved from the structure. If this parameter
        is None, material parameters are computed each time, the wavelenght changes even slightly (this
        is most accurate, but can be very inefficient.
    - &update-gain
      attr: update-gain
      var: optical.update_gain
      label: Always update gain
      type: bool
      default: false
      help: >
        If this attribute is set to 'yes', material parameters are always recomputed for layers with
        gains. This allows to set 'lam0' for better efficiency and still update gain for slight changes
        of wavelength.
    - attr: domain
      var: optical.domain
      label: Computational domain
      type: choice
      default: infinite
      choices: [ finite, infinite ]
      help: >
        Computational domain. If set to finite, the field is expanded in Fourier-Bessel series over
        a finite domain (geometry + PMLs). For infinite domain, the field is represented by its Hankel transform.
    - &size
      attr: size
      var: optical.size
      label: Expansion size
      type: int
      default: 12
      help: >
        Expansion size.
    - &group-layers
      attr: group-layers
      var: optical.group_layers
      label: Layers grouping
      type: bool
      default: true
      help: >
        Should similar layers be grouped for better performance.
    - attr: k-method
      var: optical.kmethod
      label: Wavevectors selection method
      type: choice
      default: uniform
      choices: [ uniform, laguerre, manual ]
      help: >
        Method of selecting wavevectors for numerical Hankel transform in infinite domain.
    - attr: k-scale
      var: optical.kscale
      label: Wavevectors scaling
      type: float
      default: 10
      help: >
        Scale factor for wavevectors used in infinite domain. Multiplied by the expansion size and divided
        by the geometry width it is a maximum considered wavevector.
    - attr: k-list
      label: Wavectors list
      type: list of floats
      help: >
        A list of relative wavevetors ranges. The numbers should be relative to the inverse of the structure
        width. The actual wavevectors used in the computations are the avrages of each two adjacent values
        specified here and the integration weights are the sizes of each interval.
    - &transfer
      attr: transfer
      var: optical.transfer
      label: Transfer method
      type: choice
      default: auto
      choices: [ auto, reflection, admittance ]
      help: >
        Layers transfer algorithm. Can be either reflection transfer, admittance transfer or automatic,
        in which case the reflection computations will use reflection transfer and eigenmode search is done
        with admittance transfer.
    - attr: lam
      label: Initial wavelength
      type: float
      unit: nm
      help: >
        Initial wavelength for optical search. If this value is set, the computations are started from this value.
        If this value is set, the radial mode number <i>n</i> is ignored.
        Note that it is safer to leave this empty and allow the solver to look for it automatically, however, it may
        increase the time of optical computations.
    - *maxlam
    - attr: dlam
      var: dlam
      label: Wavelength step
      type: float
      unit: nm
      default: 0.05
      help: >
        Step, by which the wavelength is swept while searching for the approximate mode.

  - *threshold-root

  - *voltage

  - *temperature

  - *heatflux

  - *convection

  - *radiation

  - &interface
    tag: optical-interface
    label: Optical Matching Interface Position
    help: >
      Matching interface position in the stack for optical solver.
    attrs:
    - attr: position
      label: Position
      type: float
      unit: µm
      conflicts:
      - attr: object
      - attr: path
      help: >
        Interface will be located as close as possible to the vertical coordinate specified in this
        attribute.
    - attr: object
      label: Object name
      type: geometry object
      conflicts:
      - attr: position
      help: >
        Name of the geometry object below which the interface is located.
    - attr: path
      label: Object path
      type: geometry path
      conflicts:
      - attr: position
      help: >
        Optional path name, specifying particular instance of the object given in the object attribute.

  - &vpml
    tag: optical-vpml
    label: Vertical Optical PMLs
    help: >
      Vertical absorbing perfectly matched layer boundary conditions parameters.
    attrs:
    - attr: factor
      var: optical.vpml.factor
      label: Scaling factor
      type: complex
      default: 1-2j
      help: >
        PML scaling factor.
    - attr: dist
      var: optical.vpml.dist
      label: Distance
      type: float
      unit: µm
      default: 10.0
      help: >
        PML distance from the structure.
    - attr: size
      var: optical.vpml.size
      label: Size
      type: float
      unit: µm
      default: 2.0
      help: >
        PML size.

  - tag: optical-pml
    label: Radial Optical PMLs (for finite domain only)
    help: >
      Side absorbing perfectly matched layer boundary conditions parameters.
    attrs:
    - attr: factor
      var: optical.pml.factor
      label: Scaling factor
      type: complex
      default: 1.0
      help: >
        PML scaling factor.
    - attr: shape
      var: optical.pml.shape
      label: Shape order
      type: float
      default: 1
      help: >
        PML shape order (0 → flat, 1 → linearly increasing, 2 → quadratic, etc.).
    - attr: dist
      var: optical.pml.dist
      label: Distance
      type: float
      unit: µm
      default: 20.0
      help: >
        PML distance from the structure.
    - attr: size
      var: optical.pml.size
      label: Size
      type: float
      unit: µm
      default: 0.0
      help: >
        PML size.

  - *junction

  - *contacts

  - *threshold-thermoelectric-loop

  - *tmatrix

  - *ematrix

  - *diffusion

  - *gain

  - tag: optical-root
    label: Parameters of the Optical Mode Finding
    help: >
      Parameters of the root-finding algorithm in optical solver.
    attrs:
    - *method
    - *tolx
    - *tolf-min
    - attr: tolf-max
      label: Required determinant value
      type: float
      default: 1.0e-05
      help: >
        Maximum value of the determinant required to assume convergence.
    - *maxstep
    - *maxiter
    - *alpha
    - *lambda
    - *initial-range

  - *threshold-output

  providers: *threshold-providers

###########################################################################################

- solver: ThresholdSearch2D
  lib: shockley
  category: meta
  help: >
    Solver for threshold search of semiconductor laser in 2D Cartesian geometry.

    This solver performs thermo-electrical computations followed by
    determination ot threshold current and optical analysis in order to
    determine the threshold of a semiconductor laser. The search is
    performed by ``scipy`` root finding algorithm in order to determine
    the voltage and electric current ensuring no optical loss in the
    laser cavity.

    The optical computations are done with effective index method.

  tags:
  - &geometry-2d-threshold
    tag: geometry
    label: Geometry
    help: >
      Geometry settings for all solvers.
    attrs:
    - *geometry-2d-thermal
    - &geometry-2d-electrical
      attr: electrical
      label: Electrical
      required: true
      type: Cartesian2D geometry
      help: >
        Geometry used by the electrical, diffusion, and gain solvers.
    - &geometry-2d-optical
      attr: optical
      label: Optical
      required: true
      type: Cartesian2D geometry
      help: >
        Geometry used by the optical solver.

  - &mesh-2d-threshold
    tag: mesh
    label: Mesh
    help: >
      Mesh settings for all solvers.
    attrs:
    - *mesh-2d-thermal
    - *mesh-2d-electrical
    - *mesh-2d-diffusion
    - attr: optical
      label: Optical
      type: mesh
      mesh types: [ Ordered ]
      help: >
        Mesh used by the optical solver.
    - *full-mesh-electrical

  - tag: optical
    label: Optical Solver Configuration
    help: >
      Configuration of the optical solver
    attrs:
    - attr: polarization
      label: Mode polarization
      type: choice
      choices: [ TE, TM ]
      default: TE
      help: >
        Mode polarization.
    - &mn
      attr: mn
      var: mn
      label: Lateral mode number
      type: int
      default: 0
      help: >
        Lateral mode number
    - &lam
      attr: lam
      label: Emission wavelength
      required: true
      type: float
      unit: nm
      help: >
        Emission wavelength. The effective index is searched for this wavelenght.
    - &dneff
      attr: dneff
      var: dneff
      label: Effective index step
      type: float
      default: 0.02
      help: >
        Step, by which the effective index is swept while searching for the approximate mode.
    - attr: vneff
      label: Vertical effective index
      type: float
      help: >
        "Vertical effective index" i.e. the effective index what would be in the absence of lateral confinement;
        setting this value helps to find modes in very long resonators.
    - attr: vat
      label: Vertical solution coord
      type: float
      unit: µm
      help: >
        Horizontal position of at which the vertical part of the field is calculated.

  - *threshold-root

  - *voltage

  - *temperature

  - *heatflux

  - *convection

  - *radiation

  - *junction

  - *contacts

  - *threshold-thermoelectric-loop

  - *tmatrix

  - *ematrix

  - *diffusion

  - *gain

  - &optical-root
    tag: optical-root
    label: Parameters of the Optical Horizontal Root-Finding Algorithm
    help: >
      Parameters of the horizontal root-finding algorithm.
    attrs:
    - &method-2
      attr: method
      label: Root finding method
      type: choice
      default: muller
      choices: [ muller, broyden, brent ]
      help: >
        Root finding algorithm.
    - &tolx-2
      attr: tolx
      label: Tolerance on effective index
      type: float
      default: 1.0e-06
      help: >
        Maximum change of the effective frequency parameter which is allowed for convergent solution.
    - &tolf-min-2
      attr: tolf-min
      label: Sufficient determinant value
      type: float
      default: 1.0e-07
      help: >
        Minimum value of the determinant sufficient to assume convergence.
    - &tolf-max-2
      attr: tolf-max
      label: Required determinant value
      type: float
      default: 2.0e-05
      help: >
        Maximum value of the determinant required to assume convergence.
    - &maxstep-2
      attr: maxstep
      label: Maximum Broyden iteration step
      type: float
      default: 0.1
      help: >
        Maximum step in one iteration of root finding. Significant for the Broyden's method only.
    - &maxiter-2
      attr: maxiter
      label: Maximum number of iterations
      type: int
      default: 500
      help: >
        Maximum number of root finding iterations.
    - &alpha-2
      attr: alpha
      label: Broyden decrease factor
      type: float
      default: 1.0e-07
      help: >
        Parameter ensuring sufficient decrease of determinant in each step (Broyden method only).
    - &lambda-2
      attr: lambda
      label: Minimum Broyden step decrease ratio
      type: float
      default: 1.0e-08
      help: >
        Minimum decrease ratio of one step (Broyden method only).
    - &initial-range-2
      attr: initial-range
      label: Initial Muller range size
      type: complex
      default: 0.001
      help: >
        Initial range size (Muller method only).

  - tag: optical-stripe-root
    label: Parameters of the Optical Vertical Root-Finding Algorithm
    help: >
      Parameters of root-finding algorithm for one stripe.
    attrs:
    - *method-2
    - *tolx-2
    - *tolf-min-2
    - *stripe-tolf-max
    - *maxstep-2
    - *maxiter-2
    - *alpha-2
    - *lambda-2
    - *initial-range-2

  - *threshold-output

  providers: *threshold-providers

###########################################################################################

- solver: ThresholdSearchFourier2D
  lib: shockley
  category: meta
  help: >
    Solver for threshold search of semiconductor laser in 2D Cartesian geometry.

    This solver performs thermo-electrical computations followed by
    determination ot threshold current and optical analysis in order to
    determine the threshold of a semiconductor laser. The search is
    performed by ``scipy`` root finding algorithm in order to determine
    the voltage and electric current ensuring no optical loss in the
    laser cavity.

    The optical computations are done with vector method based on 2D Fourier exansion.

  tags:
  - *geometry-2d-threshold

  - *mesh-2d-threshold

  - tag: optical
    label: Optical Solver Configuration
    help: >
      Configuration of the optical solver
    attrs:
    - *size
    - attr: refine
      label: Averaging points
      type: int
      default: 32
      help: >
        Number of refinement points for refractive index averaging.
    - attr: symmetry
      label: Mode symmetry
      type: choice
      default: none
      choices: &none-tran-long [ none, Etran, Elong ]
      other: &components [ Ex, Ey, Ez, Er, Ep, Et, El, Htran, Hlong, Hx, Hy, Hz, Hr, Hp, Ht, Hl ]
      case sensitive: true
      help: >
        Mode symmetry. Specify a symmetric field component here (e.g. '<i>Etran</i>', '<i>Hx</i>').
    - &smooth
      attr: smooth
      label: Smoothing parameter
      type: float
      default: 0.0
      help: >
        Smoothing parameter for material boundaries (increases convergence).
    - *update-gain
    - *group-layers
    - *transfer
    - *lam
    - *mn
    - *dneff

  - *threshold-root

  - *voltage

  - *temperature

  - *heatflux

  - *convection

  - *radiation

  - *junction

  - *contacts

  - *threshold-thermoelectric-loop

  - *tmatrix

  - *ematrix

  - *diffusion

  - *gain

  - *optical-root

  - *threshold-output

  providers: *threshold-providers
