- solver: WasiakOld2D
  category: gain
  geometry: Cartesian2D
  help: "Simple gain solver based on Fermi Golden Rule for two-dimensional Cartesian\
    \ geometry.\n\n    This solver does not use any mesh by default and the the full\
    \ gain calculation is performed in each requested point.\n    However, if there\
    \ is a mesh specified then the gain is computed only in the mesh points and interpolated\
    \ in-between."
  lib: wasiak
  mesh:
  - Ordered
  - Regular
  need mesh: false
  tags:
  - &config1
    tag: config
    help: Some important gain parameters.
    label: Gain Parameters
    attrs:
    - attr: lifetime
      help: Average carriers lifetime. This parameter is used for gain spectrum broadening.
      label: Carriers lifetime
      type: float
      unit: ps
    - attr: matrix-elem
      help: "Value of the squared matrix element in gain computations.\n        If\
        \ it is not set it is estimated automatically."
      label: Matrix element
      type: float
      unit: (eV/m<sub>0</sub>)<sup>2</sup>
    - attr: strained
      help: "Boolean attribute indicated if the solver should consider strain in the\
        \ active region.\n        If set to <i>yes</i> then there must a layer with\
        \ the role \"<i>substrate</i>\"\n        in the geometry. The strain is computed\
        \ by comparing the atomic lattice constants of the substrate and\n       \
        \ the quantum wells."
      label: Strained
      type: bool
    - attr: cond-shift
      help: Additional conduction band shift for quantum wells.
      label: Conduction band shift
      type: float
      unit: eV
    - attr: vale-shift
      help: Additional valence band shift for quantum wells.
      label: Valence band shift
      type: float
      unit: eV
  - &levels1
    tag: levels
    help: >
      Custom energy levels in quantum wells. If this tag is used all levels must be set.
    label: Custom energy levels (either none or all attributes must be given)
    attrs:
    - attr: el
      help: Comma-separated list of electron levels.
      label: Electron levels
      type: list of floats
      unit: eV
    - attr: hh
      help: Comma-separated list of heavy hole levels.
      label: Heavy hole levels
      type: list of floats
      unit: eV
    - attr: lh
      help: Comma-separated list of light hole levels.
      label: Light hole levels
      type: list of floats
      unit: eV
  providers: &providers1
  - outGain
  receivers: &receivers
  - inTemperature
  - inCarriersConcentration

###########################################################################################

- solver: WasiakOldCyl
  category: gain
  geometry: Cylindrical
  help: "Simple gain solver based on Fermi Golden Rule for Cylindrical geometry.\n\
    \n    This solver does not use any mesh by default and the the full gain calculation\
    \ is performed in each requested point.\n    However, if there is a mesh specified\
    \ then the gain is computed only in the mesh points and interpolated in-between."
  lib: wasiak
  mesh:
  - Ordered
  - Regular
  need mesh: false
  tags:
  - *config1
  - *levels1
  providers: *providers1
  receivers: *receivers

###########################################################################################

- solver: WasiakNew2D
  category: gain
  help: "Simple gain solver based on Fermi Golden Rule for two-dimensional Cartesian\
    \ geometry.\n\n    This solver does not use any mesh by default and the the full\
    \ gain calculation is performed in each requested point.\n    However, if there\
    \ is a mesh specified then the gain is computed only in the mesh points and interpolated\
    \ in-between."
  lib: wasiak
  tags:
  - tag: geometry
    label: Geometry
    help: >
      Geometries for use by this solver.
    attrs:
    - attr: ref
      label: Geometry
      required: true
      type: Cartesian2D geometry
      help: >
        Name of the geometry used by the this solver.
    - attr: mod
      label: Modified
      type: Cartesian2D geometry
      help: >
        Name of the modified geometry for broadening calculation.
  - tag: mesh
    label: Mesh
    help: >
      Optional Ordered or Regular mesh used by this solver.
    attrs:
    - attr: ref
      type: mesh
      mesh types: [ Ordered, Regular ]
      label: Mesh
      help: >
        Name of the exisiting Ordered or Regular mesh used by this solver.
  - &config2
    tag: config
    help: Some important gain parameters.
    label: Gain Parameters
    attrs:
    - attr: lifetime
      help: Average carriers lifetime. This parameter is used for gain spectrum broadening.
      label: Carriers lifetime
      type: float
      default: 0
      unit: ps
    - attr: matrix-elem
      help: >
        Value of the squared matrix element in gain computations.
        If it is not set it is estimated automatically.
      label: Matrix element
      type: float
      unit: (eV/m<sub>0</sub>)<sup>2</sup>
    - attr: strained
      help: >
        Boolean attribute indicated if the solver should consider strain in the active region.
        If set to <i>yes</i> then there must a layer with the role \"<i>substrate</i>\"
        in the geometry. The strain is computed by comparing the atomic lattice constants of
        the substrate and the quantum wells.
      label: Strained
      type: bool
      default: false
    - attr: cond-shift
      help: Additional conduction band shift for quantum wells.
      label: Conduction band shift
      type: float
      unit: eV
    - attr: vale-shift
      label: Valence band shift
      type: float
      help: Additional valence band shift for quantum wells.
      unit: eV
    - attr: adjust-layers
      help: >
        Setting this to true, allows to adjust the widths of the gain region layers
        by few angstroms to improve numerical stability.
      label: Adjust layers widths
      type: bool
      default: true
    - attr: roughness
      help: >
        If there is no modified geometry: roughness of the thicknesses of the quantum wells.
        With modified geometry present: broadening factor.
      label: Roughness / Broadening
      default: 1
      type: float
    - attr: fast-levels
      help: >
        Compute levels only once and simply shift for different temperatures?
        Setting this to True stongly increases computation speed, but makes the results
        less accurate for high gains."
      label: Fast levels
      type: bool
      default: true
    - attr: Tref
      help: >
        Reference temperature. If fast-levels is set, this is the temperature used
        for initial computation of the energy levels.
      label: Reference temperature
      type: float
      default: 300
      unit: K
  providers: &providers2
  - outGain
  - outLuminescence
  receivers: *receivers

###########################################################################################

- solver: WasiakNewCyl
  category: gain
  help: "Simple gain solver based on Fermi Golden Rule for Cylindrical geometry.\n\
    \n    This solver does not use any mesh by default and the the full gain calculation\
    \ is performed in each requested point.\n    However, if there is a mesh specified\
    \ then the gain is computed only in the mesh points and interpolated in-between."
  lib: wasiak
  tags:
  - tag: geometry
    label: Geometry
    help: >
      Geometries for use by this solver.
    attrs:
    - attr: ref
      label: Geometry
      required: true
      type: Cartesian2D geometry
      help: >
        Name of the geometry used by the this solver.
    - attr: mod
      label: Modified
      type: Cartesian2D geometry
      help: >
        Name of the modified geometry for broadening calculation.
  - tag: mesh
    label: Mesh
    help: >
      Optional Ordered or Regular mesh used by this solver.
    attrs:
    - attr: ref
      type: mesh
      mesh types: [ Ordered, Regular ]
      label: Mesh
      help: >
        Name of the exisiting Ordered or Regular mesh used by this solver.
  - *config2
  providers: *providers2
  receivers: *receivers
