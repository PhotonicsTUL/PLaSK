- solver: Fourier2D
  lib: modal
  category: optical
  help: >
    Vectorial optical solver based on the plane-wave reflection transfer method.

  geometry: Cartesian2D

  mesh: [ Ordered, Regular ]
  need mesh: false

  tags:
  - tag: expansion
    label: Details on Fourier Expansion
    help: >
      Details on Fourier expansion used in computations
    attrs:
    - &lam0
      attr: lam0
      label: Wavelength for parameters
      type: float
      unit: nm
      help: >
        This is a wavelength at which refractive index is retrieved from the structure. If this parameter
        is None, material parameters are computed each time, the wavelength changes even slightly (this
        is most accurate, but can be very inefficient.
    - &update-gain
      attr: update-gain
      label: Recompute dynamic parameters
      type: bool
      default: true
      help: >
        If this attribute is set to 'yes', material parameters are always recomputed for layers with
        gain or permittivity provided by inEpsilon. This allows to set 'lam0' for better efficiency
        and still consider slight changes of wavelength, where it matters the most.
    - &size
      attr: size
      label: Expansion size
      type: int
      default: 12
      help: >
        Expansion size.
    - attr: refine
      label: Averaging points
      type: int
      default: 32
      help: >
        Number of refinement points for refractive index averaging.
    - attr: ft
      label: Fourier transform type
      type: choice
      default: discrete
      choices: [ discrete, analytic ]
      help: >
        Type of the Fourier transform. Analytic transform is faster and more precise,
        however it ignores temperature and gain distributions.
    - &dct
      attr: dct
      label: Symmetric transform type
      type: choice
      default: 2
      choices: [ 1, 2 ]
      help: >
        Type of discrete cosine transform for symmetric expansion.
    - &smooth
      attr: smooth
      label: Smoothing parameter
      type: float
      default: 0.0
      help: >
        Smoothing parameter for material boundaries (increases convergence).
    - &group-layers
      attr: group-layers
      label: Layers grouping
      type: bool
      default: true
      help: >
        Should similar layers be grouped for better performance.
    - &temp-diff
      attr: temp-diff
      label: Maximum group <i>ΔT</i>
      type: float
      unit: K
      help: >
        Maximum temperature difference between the layers in one group. If a temperature in a single layer
        varies vertically more than this value, the layer is split into two and put into separate groups.
        If this is empty, temperature gradient is ignored in layers grouping.
    - &temp-dist
      attr: temp-dist
      label: Temperature probing step
      type: float
      unit: µm
      default: 0.5
      help: >
        Approximate lateral distance of the points in which the temperature is probed to decide about
        the temperature difference in one layer.
    - &temp-layer
      attr: temp-layer
      label: Minimum temperature layer width
      type: float
      unit: µm
      default: 0.05
      help: >
        Minimum thickness of sublayers resulting from temperature-gradient division.

  - tag: mode
    label: Mode Properties
    help: >
      Mode properties.
    attrs:
    - &wavelength
      attr: lam
      label: Wavelength
      type: float
      unit: nm
      help: >
        Light wavelength.
    - &wavevector
      group: Wavevector
      unit: µm<sup>-1</sup>
      attrs:
      - attr: k-long
        label: Longitudinal
        type: float
        default: 0
        help: >
          Longitudinal wave-vector component.
      - attr: k-tran
        label: Transverse
        type: float
        default: 0
        help: >
          Transverse wave-vector component.
    - attr: symmetry
      label: Mode symmetry
      type: choice
      default: none
      choices: &none-tran-long [ none, Etran, Elong ]
      other: &components [ Ex, Ey, Ez, Er, Ep, Et, El, Htran, Hlong, Hx, Hy, Hz, Hr, Hp, Ht, Hl ]
      case sensitive: true
      help: >
        Mode symmetry. Specify a symmetric field component here (e.g. '<i>Etran</i>', '<i>Hx</i>').
    - attr: polarization
      label: Mode polarization
      type: choice
      default: none
      choices: *none-tran-long
      other: [ Ex, Ey, Ez, Er, Ep, Et, El, Htran, Hlong, Hx, Hy, Hz, Hr, Hp, Ht, Hl, TE, TM ]
      case sensitive: true
      help: >
        Mode polarization. Give an existing field component here (e.g. '<i>Etran</i>', '<i>Hx</i>').
    - &emission
      attr: emission
      label: Direction of emission
      type: choice
      default: undefined
      choices:
      - undefined
      - top
      - bottom
      help: >
        Direction of the useful light emission. Necessary for the over-threshold model to correctly
        compute the output power. Currently, the fields are normalized only for top and bottom emission.

  - &interface
    tag: interface
    label: Matching Interface Position in the Stack
    help: >
      Matching interface position in the stack.
    attrs:
    - attr: position
      label: Position
      type: float
      unit: µm
      conflicts:
      - attr: object
      - attr: path
      help: >
        Interface will be located as close as possible to the vertical coordinate specified in this
        attribute.
    - attr: object
      label: Object name
      type: geometry object
      conflicts:
      - attr: position
      help: >
        Name of the geometry object below which the interface is located.
    - attr: path
      label: Object path
      type: geometry path
      conflicts:
      - attr: position
      help: >
        Optional path name, specifying particular instance of the object given in the object attribute.

  - tag: pml
    label: Horizontal PMLs
    help: >
      Side absorbing perfectly matched layer boundary conditions parameters.
    attrs:
    - attr: factor
      label: Scaling factor
      type: complex
      default: 1.0
      help: >
        PML scaling factor.
    - attr: shape
      label: Shape order
      type: float
      default: 1
      help: >
        PML shape order (0 → flat, 1 → linearly increasing, 2 → quadratic, etc.).
    - attr: dist
      label: Distance
      type: float
      unit: µm
      default: 0.5
      help: >
        PML distance from the structure.
    - attr: size
      label: Size
      type: float
      unit: µm
      default: 1.0
      help: >
        PML size.

  - &transfer
    tag: transfer
    label: Transfer Algorithm Settings
    help: >
      Vertical field transfer settings.
    attrs:
    - attr: method
      label: Transfer method
      type: choice
      default: auto
      choices: [ auto, admittance, impedance, reflection, reflection-impedance ]
      other: [ reflection-admittance ]
      help: >
        Layers transfer algorithm. Can be either reflection transfer, admittance/impedance transfer or automatic,
        in which case the reflection computations will use reflection transfer and eigenmode search is done
        with admittance transfer. Reflection transfer can have optional suffix <tt>-admittance</tt> (default) or
        <tt>-impedance</tt>, in which case the admittance/impedance matching is done at interface (for eigenmode search).
        You should prefer admittance if electric field is expected to have significant horizontal components (particularly
        at the interface) i.e. for TE-like modes and impedance for TM-like modes.
    - attr: determinant
      label: Determinant type
      type: choice
      default: eigenvalue
      choices: [ eigenvalue, full ]
      other: [ eigen ]
      help: >
        This attribute specified what is returned by the <tt>get_determinant</tt> method. Regardless of the determinant type,
        its value must be zero for any mode. Depending on the determinant type value, the computed value is either
        the characteristic matrix eigenvalue with the smallest magniture or the full determinant of this matrix.
  - &vpml
    tag: vpml
    label: Vertical PMLs
    help: >
      Vertical absorbing perfectly matched layer boundary conditions parameters.
    attrs:
    - attr: factor
      label: Scaling factor
      type: complex
      default: (1-2j)
      help: >
        PML scaling factor.
    - attr: dist
      label: Distance
      type: float
      unit: µm
      default: 10.0
      help: >
        PML distance from the structure.
    - attr: size
      label: Size
      type: float
      unit: µm
      default: 2.0
      help: >
        PML size.

  - &root
    tag: root
    label: Parameters of the Root-Finding Algorithm
    help: >
      Parameters of the global root-finding algorithm.
    attrs:
    - attr: method
      label: Root finding method
      type: choice
      default: muller
      choices: [ muller, broyden, brent ]
      help: >
        Root finding algorithm (Muller's method or Broyden's method).
    - attr: tolx
      label: Tolerance on argument
      type: float
      default: 1.0e-06
      help: >
        Maximum change of the argument which is allowed for convergent solution.
    - attr: tolf-min
      label: Sufficient determinant value
      type: float
      default: 1.0e-07
      help: >
        Minimum value of the determinant sufficient to assume convergence.
    - attr: tolf-max
      label: Required determinant value
      type: float
      default: 1.0e-05
      help: >
        Maximum value of the determinant required to assume convergence.
    - attr: maxstep
      label: Maximum Broyden iteration step
      type: float
      default: 0.1
      help: >
        Maximum step in one iteration of root finding. Significant for the Broyden method only.
    - attr: maxiter
      label: Maximum number of iterations
      type: int
      default: 500
      help: >
        Maximum number of root finding iterations.
    - attr: alpha
      label: Broyden decrease factor
      type: float
      default: 1.0e-07
      help: >
        Parameter ensuring sufficient decrease of determinant in each step (Broyden method only).
    - attr: lambda
      label: Minimum Broyden step decrease ratio
      type: float
      default: 1.0e-08
      help: >
        Minimum decrease ratio of one step (Broyden method only).
    - attr: initial-range
      label: Initial Muller range size
      type: complex
      default: 0.001
      help: >
        Initial range size (Muller method only).

  - tag: mirrors
    label: Mirror Losses
    help: >
      Front and back mirror losses.
    attrs:
    - attr: R1
      label: Front reflectivity
      type: float
      help: >
        Reflectivity of the front mirror.
    - attr: R2
      label: Back reflectivity
      type: float
      help: >
        Reflectivity of the back mirror.

  providers:
  - outLightMagnitude
  - outLightE
  - outLightH
  - outEpsilon
  - outRefractiveIndex
  - outNeff

  receivers: &receivers
  - inTemperature
  - inGain
  - inEpsilon
  - inCarriersConcentration

###########################################################################################

- solver: Fourier3D
  lib: modal
  category: optical
  help: >
    Vectorial optical solver based on the plane-wave reflection transfer method.

  geometry: Cartesian3D

  tags:
  - tag: expansion
    label: Details on Fourier Expansion
    help: >
      Details on Fourier expansion used in computations.
    attrs:
    - *lam0
    - *update-gain
    - attr: size
      label: Expansion sizes
      type: int
      default: 12
      conflicts:
      - attr: size-tran
      - attr: size-long
      help: >
        Expansion sizes along longitudinal and transverse directions. You cannot set this attribute
        together with ‘Longitudinal expansion size’ (<tt>size-long</tt>) and ‘Transverse expansion size’
        (<tt>size-tran</tt>)
    - group: Expansion sizes
      attrs:
      - attr: size-long
        label: Longitudinal
        type: int
        conflicts:
        - attr: size
        help: >
          Expansion size along longitudinal axis. You cannot set this attribute together with ‘Expansion
          sizes’ (<tt>size</tt>).
      - attr: size-tran
        label: Transverse
        type: int
        conflicts:
        - attr: size
        help: >
          Expansion size along transverse axis. You cannot set this attribute together with ‘Expansion
          sizes’ (<tt>size</tt>).
    - attr: refine
      label: Averaging points
      type: int
      default: 16
      conflicts:
      - attr: refine-tran
      - attr: refine-long
      help: >
        Number of refinement points for refractive index averaging along longitudinal and transverse
        directions. You cannot set this attribute together with ‘Longitudinal averaging points’ (<tt>refine-long</tt>)
        and ‘Transverse averaging points’ (<tt>refine-tran</tt>) .
    - group: Averaging points
      attrs:
      - attr: refine-long
        label: Longitudinal
        type: int
        conflicts:
        - attr: refine
        help: >
          Number of refinement points for refractive index averaging along longitudinal axis. You cannot
          set this attribute together with ‘Averaging points’ (<tt>refine</tt>).
      - attr: refine-tran
        label: Transverse
        type: int
        conflicts:
        - attr: refine
        help: >
          Number of refinement points for refractive index averaging along transverse axis. You cannot
          set this attribute together with ‘Averaging points’ (<tt>refine</tt>).
    - attr: rule
      label: Expansion rule
      type: choice
      choices:
        - direct
        - inverse
        - combined
        - old
      default: direct
      help: >
        Permittivity inversion rule. The new rule is supposed to provide the best convergence.
        'old' is available for consistency with old results.
    - attr: grad-smooth
      label: Gradient smooth
      type: float
      default: 0.001
      help: >
        Smoothing parameter for refreactive index gradients. This is needed for the new expansion rule.
    - *dct
    - *smooth
    - *group-layers
    - *temp-diff
    - *temp-dist
    - *temp-layer

  - tag: mode
    label: Mode Properties
    help: >
      Mode properties.
    attrs:
    - *wavelength
    - *wavevector
    - group: Mode symmetry
      attrs:
      - attr: symmetry-long
        label: Longitudinal
        type: choice
        default: none
        choices: *none-tran-long
        other: *components
        case sensitive: true
        help: >
          Mode symmetry along longitudinal axis. Specify a symmetric field component here (e.g. '<i>Etran</i>',
          '<i>Hx</i>').
      - attr: symmetry-tran
        label: Transverse
        type: choice
        default: none
        choices: *none-tran-long
        other: *components
        case sensitive: true
        help: >
          Mode symmetry along transverse axis. Specify a symmetric field component here (e.g. '<i>Etran</i>',
          '<i>Hx</i>').
    - *emission

  - *interface

  - tag: pmls
    label: Longitudinal and Transverse PMLs
    help: >
      Side absorbing perfectly matched layer boundary conditions parameters.
    attrs:
    - attr: factor
      label: Scaling factor
      type: complex
      default: (1-2j)
      conflicts:
      - tag: pmls/long
        attr: factor
      - tag: pmls/tran
        attr: factor
      help: >
        PML scaling factor.
    - attr: shape
      label: Shape order
      type: float
      default: 1
      conflicts:
      - tag: pmls/long
        attr: shape
      - tag: pmls/tran
        attr: shape
      help: >
        PML shape order (0 → flat, 1 → linearly increasing, 2 → quadratic, etc.).
    - attr: dist
      label: Distance
      type: float
      unit: µm
      default: 0.5
      conflicts:
      - tag: pmls/long
        attr: dist
      - tag: pmls/tran
        attr: dist
      help: >
        PML distance from the structure.
    - attr: size
      label: Size
      type: float
      unit: µm
      default: 1.0
      conflicts:
      - tag: pmls/long
        attr: size
      - tag: pmls/tran
        attr: size
      help: >
        PML size.

    tags:
    - tag: long
      label: Longitudinal PML (overrides ‘Longitudinal and transverse PMLs’)
      help: >
        Parameters of PMLs in longitudinal direction. This overrides the global side PMLs configuration.
      attrs:
      - &pml-factor
        attr: factor
        label: Scaling factor
        type: complex
        conflicts:
        - tag: pmls
          attr: factor
        help: >
          PML scaling factor.
      - &pml-shape
        attr: shape
        label: Shape order
        type: float
        conflicts:
        - tag: pmls
          attr: shape
        help: >
          PML shape order (0 → flat, 1 → linearly increasing, 2 → quadratic, etc.).
      - &pml-dist
        attr: dist
        label: Distance
        type: float
        unit: µm
        conflicts:
        - tag: pmls
          attr: dist
        help: >
          PML distance from the structure.
      - &pml-size
        attr: size
        label: Size
        type: float
        unit: µm
        conflicts:
        - tag: pmls
          attr: size
        help: >
          PML size.

    - tag: tran
      label: Transverse PML (overrides ‘Longitudinal and transverse PMLs’)
      help: >
        Parameters of PMLs in transverse direction. This overrides the global side PMLs configuration.
      attrs:
      - *pml-factor
      - *pml-shape
      - *pml-dist
      - *pml-size

  - *transfer

  - *vpml

  - *root

  providers:
  - outLightMagnitude
  - outLightE
  - outElectricField: LightE
  - outLightH
  - outMagneticField: LightH
  - outEpsilon

  receivers: *receivers

###########################################################################################

- solver: BesselCyl
  lib: modal
  category: optical
  help: >
    Vectorial optical solver based on the Bessel expansion reflection transfer method.

  geometry: Cylindrical
  mesh: Ordered
  need mesh: false

  tags:
  - tag: expansion
    label: Details on Bessel Expansion
    help: >
      Details on Bessel expansion used in computations
    attrs:
    - attr: lam0
      label: Wavelength for parameters
      type: float
      help: >
        This is a wavelength at which refractive index is retrieved from the structure. If this parameter
        is None, material parameters are computed each time, the wavelength changes even slightly (this
        is most accurate, but can be very inefficient.
    - *update-gain
    - attr: domain
      label: Computational domain
      type: choice
      default: infinite
      choices:
      - finite
      - infinite
      help: >
        Computational domain. If set to finite, the field is expanded in Fourier-Bessel series over
        a finite domain (geometry + PMLs). For infinite domain, the field is represented by its Hankel transform.
    - *size
    - *group-layers
    - *temp-diff
    - *temp-dist
    - *temp-layer
    - attr: integrals-error
      label: Maximum integration error
      type: float
      default: 1.0e-06
      help: >
        Maximum error for Bessel functions integrals.
    - attr: integrals-points
      label: Maximum integration points
      type: int
      default: 1000
      help: >
        Maximum number of points each element is sampled for computing Bessel functions integrals.
    - attr: k-method
      label: Wavevectors selection method
      type: choice
      default: nonuniform
      choices: [ uniform, nonuniform, laguerre, manual ]
      help: >
        Method of selecting wavevectors for numerical Hankel transform in infinite domain.
    - attr: k-max
      label: Maximum wavevector
      type: float
      default: 5
      help: >
        Maximum wavevector used in infinite domain relative to the wavelength.
    - attr: k-scale
      label: Wavevectors scaling
      type: float
      default: 1
      help: >
        Scale factor for wavevectors used in infinite domain.
    - attr: k-list
      label: Wavectors list
      type: list of floats
      help: >
        A list of wavevectors ranges. If no weights are given, the actual wavevectors
        used in the computations are the avrages of each two adjacent values specified here and
        the integration weights are the sizes of each interval.
    - attr: k-weights
      label: Wavector weights
      type: list of floats
      help: >
        Weights for manual wavevectors.
    - attr: rule
      label: Matrix rule
      type: choice
      choices:
        - direct
        - combined1
        - combined2
        - old
      default: direct
      help: >
        Expansion rule for coefficients matrix. Can be direct or inverse. Inverse rule is proven to provide better
        convergence and should be used in almost every case.

  - tag: mode
    label: Mode Properties
    help: >
      Mode properties.
    attrs:
    - attr: lam
      label: Wavelength
      type: float
      unit: nm
      help: >
        Light wavelength. For finding modes this parameter is ignored. However, it is important
        for reflection and transmission computation.
    - attr: emission
      label: Direction of emission
      type: choice
      default: undefined
      choices:
      - undefined
      - top
      - bottom
      help: >
        Direction of the useful light emission. Necessary for the over-threshold model to correctly
        compute the output power. In this solver only top and bottom emission is possible.

  - *interface

  - *transfer

  - *vpml

  - *root

  - tag: pml
    label: Radial PMLs (for finite domain only)
    help: >
      Side absorbing perfectly matched layer boundary conditions parameters.
    attrs:
    - attr: factor
      label: Scaling factor
      type: complex
      default: 1.0
      help: >
        PML scaling factor.
    - attr: shape
      label: Shape order
      type: float
      default: 1
      help: >
        PML shape order (0 → flat, 1 → linearly increasing, 2 → quadratic, etc.).
    - attr: dist
      label: Distance
      type: float
      unit: µm
      default: 20.0
      help: >
        PML distance from the structure.
    - attr: size
      label: Size
      type: float
      unit: µm
      default: 0.0
      help: >
        PML size.

  providers:
  - outLightMagnitude
  - outLoss
  - outLightE
  - outLightH
  - outUpwardsLightE: LightE
  - outUpwardsLightH: LightH
  - outDownwardsLightE: LightE
  - outDownwardsLightH: LightH
  - outEpsilon
  - outWavelength

  receivers: *receivers
