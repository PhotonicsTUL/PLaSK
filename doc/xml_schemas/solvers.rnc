# custom solver definitions

# ============ thermal FEM solver ============

solver.thermal_elect_FEM.content = solver.common.all	&
	element matrix {
		##Big value for the first boundary condition
		attribute bignum { xsd:double }?,
		##Algorithms used for matrix factorization
		attribute algorithm { "slow" | "block" }?
	}?

solver |= element thermal {
	attribute solver {
		##Finite element thermal solver for 2D Cartesian Geometry.
		"Static2D" |
		##Finite element thermal solver for 2D Cylindrical Geometry.
		"StaticCyl"
	} &
	solver.thermal_elect_FEM.content	&
	element loop {
		##Initial temperature
		attribute inittemp { xsd:double }?,
		##Limit for the temperature updates
		attribute corrlim { xsd:double }?,
		##Types of the returned correction
		attribute corrtype { "absolute" | "abs" | "relative" | "rel" }?
	}? &
	##Boundary conditions for the constant temperature
	element temperature {
		boundary_cond
	}? &
	##Boundary conditions for the constant heat flux
	element heatflux {
		boundary_cond
	}? &
	##Convective boundary conditions
	element convection {
		boundary_cond
	}? &
	##Radiative boundary conditions
	element radiation {
		boundary_cond
	}?
}

solver |= element electrical {
	attribute solver {
		##Finite element thermal solver for 2D Cartesian Geometry.
		"Beta2D" |
		##Finite element thermal solver for 2D Cylindrical Geometry.
		"BetaCyl"
	} &
	solver.thermal_elect_FEM.content	&
	##Boundary conditions of the first kind (constant potential)
	element (voltage|potential) {
		boundary_cond
	}? &
	element loop {
		##Limit for the potential updates
		attribute corrlim { xsd:double }?,
		##Types of the returned correction
		attribute corrtype { "absolute" | "abs" | "relative" | "rel" }?
	}? &
	element junction {
		##Reverse current [A/mÂ²]
		attribute js { xsd:double }?,
		##Junction coefficient
		attribute beta { xsd:double }?,
		##Conductivity of the n-contact (one or two, comma separated, doubles)
		attribute pnjcond { text }?,	#TODO: should be double or two doubles comma separated
		attribute wavelength { xsd:double }?,
		##Method used for computing heats
		attribute heat { "joules" | "wavelength" }?
	}? &
	element contacts {
		##Conductivity of the p-contact
		attribute pcond { xsd:double }?,
		##Conductivity of the n-contact
		attribute ncond { xsd:double }?
	}?
}
